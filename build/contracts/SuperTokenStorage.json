{
  "contractName": "SuperTokenStorage",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to ensure the implementation contract (SuperToken.sol) does not override any auxillary state variables. For more info see `./docs/StorageLayout.md`.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Abstract Storage Contract to pad the first 32 slots of storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/SuperTokenStorage.sol\":\"SuperTokenStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/utils/SuperTokenStorage.sol\":{\"keccak256\":\"0xdcd06650455e4dc6a0ab74385ac8446bb55116c3f93b7e969bd2ad59f8608c3b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://733e020d9993912be736e0f3eb3ac155079e631bee9cee6c13095818bea424cf\",\"dweb:/ipfs/QmYtn3UGjik4wLRuP71KQwErMYkvkdU6DAc6WB8zKTqM3F\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\n/// @title Abstract Storage Contract to pad the first 32 slots of storage\n/// @author Superfluid\n/// @dev MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to\n/// ensure the implementation contract (SuperToken.sol) does not override any auxillary state\n/// variables. For more info see `./docs/StorageLayout.md`.\nabstract contract SuperTokenStorage {\n    uint256[32] internal _storagePaddings;\n}\n",
  "sourcePath": "/home/bholagabbar/WebstormProjects/airstreem-api/contracts/utils/SuperTokenStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/SuperTokenStorage.sol",
    "exportedSymbols": {
      "SuperTokenStorage": [
        2506
      ]
    },
    "id": 2507,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2500,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:16"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "SuperTokenStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2501,
          "nodeType": "StructuredDocumentation",
          "src": "60:348:16",
          "text": "@title Abstract Storage Contract to pad the first 32 slots of storage\n @author Superfluid\n @dev MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to\n ensure the implementation contract (SuperToken.sol) does not override any auxillary state\n variables. For more info see `./docs/StorageLayout.md`."
        },
        "fullyImplemented": true,
        "id": 2506,
        "linearizedBaseContracts": [
          2506
        ],
        "name": "SuperTokenStorage",
        "nameLocation": "426:17:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2505,
            "mutability": "mutable",
            "name": "_storagePaddings",
            "nameLocation": "471:16:16",
            "nodeType": "VariableDeclaration",
            "scope": 2506,
            "src": "450:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$32_storage",
              "typeString": "uint256[32]"
            },
            "typeName": {
              "baseType": {
                "id": 2502,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "450:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2504,
              "length": {
                "hexValue": "3332",
                "id": 2503,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "458:2:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "32"
              },
              "nodeType": "ArrayTypeName",
              "src": "450:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$32_storage_ptr",
                "typeString": "uint256[32]"
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 2507,
        "src": "408:82:16",
        "usedErrors": []
      }
    ],
    "src": "35:456:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-26T00:08:16.693Z",
  "devdoc": {
    "author": "Superfluid",
    "details": "MUST be the FIRST contract inherited to pad the first 32 slots. The slots are padded to ensure the implementation contract (SuperToken.sol) does not override any auxillary state variables. For more info see `./docs/StorageLayout.md`.",
    "kind": "dev",
    "methods": {},
    "title": "Abstract Storage Contract to pad the first 32 slots of storage",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}